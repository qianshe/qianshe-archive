name: Quality Monitoring

on:
  schedule:
    # 每周一早上8点运行
    - cron: '0 8 * * 1'
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'package.json'
      - 'package-lock.json'
      - 'eslint.config.js'
      - '.prettierrc'

jobs:
  quality-monitoring:
    name: Code Quality Monitoring
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: |
          npm ci
          npm run install:all

      - name: Run quality monitoring
        run: npm run quality:monitor

      - name: Upload quality report
        uses: actions/upload-artifact@v4
        with:
          name: quality-monitoring-report
          path: quality-reports/
          retention-days: 90

      - name: Generate quality trend
        run: node scripts/generate-quality-trend.js

      - name: Create quality dashboard
        run: node scripts/create-quality-dashboard.js

      - name: Upload quality dashboard
        uses: actions/upload-artifact@v4
        with:
          name: quality-dashboard
          path: quality-dashboard.html
          retention-days: 90

      - name: Notify team on quality issues
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issueTitle = '🚨 Code Quality Issues Detected';
            const issueBody = `
            ## 代码质量问题警报

            自动化质量监控发现了需要关注的代码质量问题：

            ### 建议的改进措施：
            1. 运行 \`npm run quality-check\` 查看详细问题
            2. 修复ESLint报告的代码质量问题
            3. 提高测试覆盖率
            4. 更新依赖包以修复安全漏洞

            ### 查看详细报告：
            - GitHub Actions: [查看运行结果](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - 质量报告: 下载附件查看详细报告

            ---
            *此问题由自动化质量监控系统生成*
            `;

            try {
              // 检查是否已有开放的类似问题
              const existingIssues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                labels: ['quality-monitoring']
              });

              if (existingIssues.data.length === 0) {
                // 创建新问题
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: issueTitle,
                  body: issueBody,
                  labels: ['quality-monitoring', 'bug']
                });
              }
            } catch (error) {
              console.log('Failed to create issue:', error);
            }

  dependency-update-check:
    name: Dependency Update Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated dependencies
        run: |
          npm outdated > outdated-deps.txt || true
          echo "## Outdated Dependencies" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat outdated-deps.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload outdated dependencies report
        uses: actions/upload-artifact@v4
        with:
          name: outdated-dependencies
          path: outdated-deps.txt
          retention-days: 7

      - name: Create PR for security updates
        if: contains(steps.outdated.outputs.result, 'high') || contains(steps.outdated.outputs.result, 'critical')
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies for security fixes'
          title: '🔒 Security: Update Dependencies'
          body: |
            ## 🔒 安全更新

            自动检测到依赖包存在安全漏洞，需要更新。

            ### 更新内容：
            - 修复已发现的安全漏洞
            - 更新到最新的稳定版本

            ### 验证步骤：
            1. 检查构建是否成功
            2. 运行所有测试
            3. 进行手动功能测试

            ---
            *此PR由自动化安全监控生成*
          branch: security-dependency-update
          delete-branch: true