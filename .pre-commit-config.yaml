# Pre-commit hooks 配置文件
# 确保每次提交前都进行代码质量检查

repos:
  # 代码格式检查和修复
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # 检查文件末尾是否有换行符
      - id: end-of-file-fixer
      # 移除行尾空格
      - id: trailing-whitespace
      # 检查是否添加了大文件
      - id: check-added-large-files
        args: ['--maxkb=1000']
      # 检查JSON文件格式
      - id: check-json
      # 检查YAML文件格式
      - id: check-yaml
      # 检查是否有合并冲突标记
      - id: check-merge-conflict
      # 检查Python文件语法（如果有的话）
      - id: check-executables-have-shebangs
      # 防止提交到主分支
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]

  # 代码格式化
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3
        files: ^.*\.py$

  # JavaScript/TypeScript 代码检查
  - repo: local
    hooks:
      # ESLint 代码质量检查
      - id: eslint
        name: ESLint
        entry: npm run lint
        language: system
        files: \.(js|jsx|ts|tsx)$
        pass_filenames: false
        types: [file]

      # Prettier 代码格式化
      - id: prettier
        name: Prettier
        entry: npm run format
        language: system
        files: \.(js|jsx|ts|tsx|json|css|scss|less|md|yml|yaml)$
        pass_filenames: false
        types: [file]

      # TypeScript 类型检查
      - id: typescript-check
        name: TypeScript Type Check
        entry: npm run type-check-all
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false
        types: [file]

      # 单元测试检查
      - id: test-check
        name: Unit Tests
        entry: npm run test
        language: system
        files: \.(js|jsx|ts|tsx)$
        pass_filenames: false
        types: [file]

      # 构建检查
      - id: build-check
        name: Build Check
        entry: npm run build:check
        language: system
        files: \.(js|jsx|ts|tsx)$
        pass_filenames: false
        types: [file]

  # 安全性检查
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  # 自定义检查脚本
  - repo: local
    hooks:
      # 检查package.json的scripts一致性
      - id: check-package-scripts
        name: Check Package Scripts Consistency
        entry: node scripts/check-package-scripts.js
        language: system
        files: package\.json$

      # 检查环境变量配置
      - id: check-env-config
        name: Check Environment Config
        entry: node scripts/check-env-config.js
        language: system
        files: \.(env|env\.example|env\.local)$

      # 检查导入路径一致性
      - id: check-imports
        name: Check Import Paths
        entry: node scripts/check-imports.js
        language: system
        files: \.(js|jsx|ts|tsx)$

# 全局配置
default_stages: [commit]
fail_fast: false
default_language_version:
  python: python3

# CI配置
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false