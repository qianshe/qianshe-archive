name: Type Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  type-check:
    name: TypeScript Type Checking
    runs-on: ubuntu-latest

    strategy:
      matrix:
        workspace:
          - { name: 'dashboard-frontend', path: 'dashboard/frontend' }
          - { name: 'portfolio-frontend', path: 'portfolio/frontend' }
          - { name: 'dashboard-worker', path: 'dashboard/worker' }
          - { name: 'portfolio-worker', path: 'portfolio/worker' }
          - { name: 'shared-types', path: 'shared/types' }

    defaults:
      run:
        working-directory: ${{ matrix.workspace.path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.workspace.path }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Generate type coverage report
        run: npm run type-coverage || true

      - name: Upload type coverage report
        if: matrix.workspace.name == 'shared-types'
        uses: actions/upload-artifact@v4
        with:
          name: type-coverage-${{ matrix.workspace.name }}
          path: type-coverage-report.json
          retention-days: 30

  type-strict-check:
    name: Strict Type Checking
    runs-on: ubuntu-latest
    needs: type-check

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install global dependencies
        run: npm install -g typescript @typescript-eslint/cli

      - name: Run strict type checking
        run: |
          # 检查是否有any类型使用
          echo "Checking for 'any' type usage..."
          find . -name "*.ts" -not -path "./node_modules/*" -not -path "./.git/*" | xargs grep -l ":\s*any\b" || true

          # 检查是否有断言的使用
          echo "Checking for type assertions..."
          find . -name "*.ts" -not -path "./node_modules/*" -not -path "./.git/*" | xargs grep -l "as\s*any\b" || true

          # 运行tsc进行严格检查
          echo "Running strict TypeScript compilation..."
          npx tsc --noEmit --strict --noImplicitAny --noImplicitReturns --noUnusedLocals --noUnusedParameters

  type-compatibility-check:
    name: Type Compatibility Check
    runs-on: ubuntu-latest
    needs: type-check

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: |
          cd shared/types && npm ci
          cd ../.. && npm ci

      - name: Check type exports
        run: |
          echo "Checking type exports from shared/types..."
          cd shared/types
          node -e "
            const types = require('./index.ts');
            console.log('Successfully loaded shared types');
          " || echo "Type exports check completed"

      - name: Check type imports
        run: |
          echo "Checking type imports in workspaces..."
          for workspace in dashboard/frontend portfolio/frontend dashboard/worker portfolio/worker; do
            if [ -d \"$workspace\" ] && [ -f \"$workspace/package.json\" ]; then
              echo \"Checking imports in $workspace...\"
              cd \"$workspace\"
              npx tsc --noEmit --skipLibCheck || echo \"Type check completed for $workspace\"
              cd ../..
            fi
          done

  type-docs-generation:
    name: Type Documentation Generation
    runs-on: ubuntu-latest
    needs: type-check
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'shared/types/package-lock.json'

      - name: Install documentation dependencies
        working-directory: shared/types
        run: |
          npm ci
          npm install -g typedoc

      - name: Generate type documentation
        working-directory: shared/types
        run: |
          typedoc --out docs --entryPointStrategy expand index.ts || true

      - name: Deploy documentation to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./shared/types/docs
          destination_dir: type-docs